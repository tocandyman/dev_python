"""
В этой программе мы создаем объект PIDController с коэффициентами пропорциональной, интегральной и дифференциальной составляющих, 
а также задаем интервал времени между вычислениями управляющего воздействия. 
Затем мы задаем начальное значение уровня воды в емкости и целевой уровень воды, который мы хотим поддерживать с помощью PID-регулятора.

В основном цикле программы мы симулируем изменение уровня воды в емкости с помощью синусоидального сигнала, 
вычисляем значение управляющего воздействия с помощью PID-регулятора и приводим его к диапазону от 0 до 100. 
Затем мы выводим текущее состояние системы на экран и задерживаем выполнение программы на 1 секунду. 
Этот процесс повторяется в бесконечном цикле.
"""

import time
import math
from class_pid import PIDController

# Создаем объект PID-регулятора с коэффициентами Kp=1, Ki=0.1, Kd=0.01 и интервалом времени 1 секунда.
pid = PIDController(1, 0.1, 0.01, 1)

# Задаем начальное значение уровня воды в емкости.
water_level = 50

# Задаем целевой уровень воды в емкости.
setpoint = 60

# Основной цикл программы.
while True:
    # Симулируем изменение уровня воды в емкости с помощью синусоидального сигнала.
    rashod =  1 + math.sin(time.time() / 60)       

    # Вычисляем значение управляющего воздействия с помощью PID-регулятора.
    control_signal = pid.compute(setpoint, water_level)
   
    # Приводим значение управляющего воздействия к диапазону от 0 до 100.
    control_signal = max(min(control_signal, 100), 0)

    water_level =  water_level  - rashod + control_signal
    # Отображаем текущее состояние системы.
    print(f"Water level: {water_level:.2f}, Control signal: {control_signal:.2f}, Расход: {rashod:.2f}")

    # Задерживаем выполнение программы на 1 секунду.
    time.sleep(1)
